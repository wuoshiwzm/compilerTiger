State 28 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 82 conflicts: 13 shift/reduce
State 83 conflicts: 12 shift/reduce
State 111 conflicts: 12 shift/reduce
State 118 conflicts: 12 shift/reduce
State 126 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN expseq RPAREN
    5    | INT
    6    | STRING
    7    | MINUS exp
    8    | symbol LPAREN args RPAREN
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp GT exp
   16    | exp LT exp
   17    | exp GE exp
   18    | exp LE exp
   19    | exp AND exp
   20    | exp OR exp
   21    | symbol LBRACE refieldlist RBRACE
   22    | lvalue LBRACK exp RBRACK OF exp
   23    | lvalue ASSIGN exp
   24    | IF exp THEN exp ELSE exp
   25    | IF exp THEN exp
   26    | WHILE exp DO exp
   27    | FOR symbol ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET decs IN expseq END

   30 lvalue: symbol
   31       | lvalue DOT symbol
   32       | lvalue LBRACK exp RBRACK

   33 symbol: ID

   34 expseq: exp SEMICOLON expseq
   35       | exp
   36       | /* empty */

   37 args: exp COMMA args
   38     | exp
   39     | /* empty */

   40 refieldlist: refield COMMA refieldlist
   41            | refield

   42 refield: symbol EQ exp
   43        | /* empty */

   44 decs: dec decs
   45     | /* empty */

   46 dec: tydecs
   47    | fundecs
   48    | VAR symbol ASSIGN exp
   49    | VAR symbol COLON symbol ASSIGN exp

   50 tydecs: tydec tydecs
   51       | tydec

   52 tydec: TYPE symbol EQ ty

   53 ty: symbol
   54   | LBRACE tyfieldlist RBRACE
   55   | ARRAY OF symbol

   56 tyfieldlist: symbol COLON symbol COMMA tyfieldlist
   57            | symbol COLON symbol
   58            | /* empty */

   59 fundecs: fundec fundecs
   60        | fundec

   61 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN EQ exp
   62       | FUNCTION symbol LPAREN tyfieldlist RPAREN COLON symbol EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 33
STRING (259) 6
INT (260) 5
COMMA (261) 37 40 56
COLON (262) 49 56 57 62
SEMICOLON (263) 34
LPAREN (264) 4 8 61 62
RPAREN (265) 4 8 61 62
LBRACK (266) 22 32
RBRACK (267) 22 32
LBRACE (268) 21 54
RBRACE (269) 21 54
DOT (270) 31
PLUS (271) 9
MINUS (272) 7 10
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 42 52 61 62
NEQ (276) 14
LT (277) 16
LE (278) 18
GT (279) 15
GE (280) 17
AND (281) 19
OR (282) 20
ASSIGN (283) 23 27 48 49
ARRAY (284) 55
IF (285) 24 25
THEN (286) 24 25
ELSE (287) 24
WHILE (288) 26
FOR (289) 27
TO (290) 27
DO (291) 26 27
LET (292) 29
IN (293) 29
END (294) 29
OF (295) 22 55
BREAK (296) 28
NIL (297) 3
FUNCTION (298) 61 62
VAR (299) 48 49
TYPE (300) 52
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 7 9 10 11 12 13 14 15 16 17 18
    19 20 22 23 24 25 26 27 32 34 35 37 38 42 48 49 61 62
lvalue (50)
    on left: 30 31 32, on right: 2 22 23 31 32
symbol (51)
    on left: 33, on right: 8 21 27 30 31 42 48 49 52 53 55 56 57 61
    62
expseq (52)
    on left: 34 35 36, on right: 4 29 34
args (53)
    on left: 37 38 39, on right: 8 37
refieldlist (54)
    on left: 40 41, on right: 21 40
refield (55)
    on left: 42 43, on right: 40 41
decs (56)
    on left: 44 45, on right: 29 44
dec (57)
    on left: 46 47 48 49, on right: 44
tydecs (58)
    on left: 50 51, on right: 46 50
tydec (59)
    on left: 52, on right: 50 51
ty (60)
    on left: 53 54 55, on right: 52
tyfieldlist (61)
    on left: 56 57 58, on right: 54 56 61 62
fundecs (62)
    on left: 59 60, on right: 47 59
fundec (63)
    on left: 61 62, on right: 59 60


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14
    symbol   go to state 15


state 1

   33 symbol: ID .

    $default  reduce using rule 33 (symbol)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 16
    lvalue  go to state 14
    symbol  go to state 15
    expseq  go to state 17


state 5

    7 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 18
    lvalue  go to state 14
    symbol  go to state 15


state 6

   24 exp: IF . exp THEN exp ELSE exp
   25    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 19
    lvalue  go to state 14
    symbol  go to state 15


state 7

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14
    symbol  go to state 15


state 8

   27 exp: FOR . symbol ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    symbol  go to state 21


state 9

   29 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 45 (decs)

    decs     go to state 25
    dec      go to state 26
    tydecs   go to state 27
    tydec    go to state 28
    fundecs  go to state 29
    fundec   go to state 30


state 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


state 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 31


state 13

    1 program: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 1 (program)


state 14

    2 exp: lvalue .
   22    | lvalue . LBRACK exp RBRACK OF exp
   23    | lvalue . ASSIGN exp
   31 lvalue: lvalue . DOT symbol
   32       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 44
    DOT     shift, and go to state 45
    ASSIGN  shift, and go to state 46

    $default  reduce using rule 2 (exp)


state 15

    8 exp: symbol . LPAREN args RPAREN
   21    | symbol . LBRACE refieldlist RBRACE
   30 lvalue: symbol .

    LPAREN  shift, and go to state 47
    LBRACE  shift, and go to state 48

    $default  reduce using rule 30 (lvalue)


state 16

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   34 expseq: exp . SEMICOLON expseq
   35       | exp .

    SEMICOLON  shift, and go to state 49
    PLUS       shift, and go to state 32
    MINUS      shift, and go to state 33
    TIMES      shift, and go to state 34
    DIVIDE     shift, and go to state 35
    EQ         shift, and go to state 36
    NEQ        shift, and go to state 37
    LT         shift, and go to state 38
    LE         shift, and go to state 39
    GT         shift, and go to state 40
    GE         shift, and go to state 41
    AND        shift, and go to state 42
    OR         shift, and go to state 43

    $default  reduce using rule 35 (expseq)


state 17

    4 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 50


state 18

    7 exp: MINUS exp .
    9    | exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 7 (exp)


state 19

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp . THEN exp ELSE exp
   25    | IF exp . THEN exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    THEN    shift, and go to state 51


state 20

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | WHILE exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 52


state 21

   27 exp: FOR symbol . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 53


state 22

   61 fundec: FUNCTION . symbol LPAREN tyfieldlist RPAREN EQ exp
   62       | FUNCTION . symbol LPAREN tyfieldlist RPAREN COLON symbol EQ exp

    ID  shift, and go to state 1

    symbol  go to state 54


state 23

   48 dec: VAR . symbol ASSIGN exp
   49    | VAR . symbol COLON symbol ASSIGN exp

    ID  shift, and go to state 1

    symbol  go to state 55


state 24

   52 tydec: TYPE . symbol EQ ty

    ID  shift, and go to state 1

    symbol  go to state 56


state 25

   29 exp: LET decs . IN expseq END

    IN  shift, and go to state 57


state 26

   44 decs: dec . decs

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 45 (decs)

    decs     go to state 58
    dec      go to state 26
    tydecs   go to state 27
    tydec    go to state 28
    fundecs  go to state 29
    fundec   go to state 30


state 27

   46 dec: tydecs .

    $default  reduce using rule 46 (dec)


state 28

   50 tydecs: tydec . tydecs
   51       | tydec .

    TYPE  shift, and go to state 24

    TYPE      [reduce using rule 51 (tydecs)]
    $default  reduce using rule 51 (tydecs)

    tydecs  go to state 59
    tydec   go to state 28


state 29

   47 dec: fundecs .

    $default  reduce using rule 47 (dec)


state 30

   59 fundecs: fundec . fundecs
   60        | fundec .

    FUNCTION  shift, and go to state 22

    FUNCTION  [reduce using rule 60 (fundecs)]
    $default  reduce using rule 60 (fundecs)

    fundecs  go to state 60
    fundec   go to state 30


state 31

    0 $accept: program $end .

    $default  accept


state 32

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 61
    lvalue  go to state 14
    symbol  go to state 15


state 33

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 62
    lvalue  go to state 14
    symbol  go to state 15


state 34

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    lvalue  go to state 14
    symbol  go to state 15


state 35

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    lvalue  go to state 14
    symbol  go to state 15


state 36

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    lvalue  go to state 14
    symbol  go to state 15


state 37

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14
    symbol  go to state 15


state 38

   16 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14
    symbol  go to state 15


state 39

   18 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14
    symbol  go to state 15


state 40

   15 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14
    symbol  go to state 15


state 41

   17 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14
    symbol  go to state 15


state 42

   19 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14
    symbol  go to state 15


state 43

   20 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14
    symbol  go to state 15


state 44

   22 exp: lvalue LBRACK . exp RBRACK OF exp
   32 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14
    symbol  go to state 15


state 45

   31 lvalue: lvalue DOT . symbol

    ID  shift, and go to state 1

    symbol  go to state 74


state 46

   23 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14
    symbol  go to state 15


state 47

    8 exp: symbol LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (args)

    exp     go to state 76
    lvalue  go to state 14
    symbol  go to state 15
    args    go to state 77


state 48

   21 exp: symbol LBRACE . refieldlist RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 43 (refield)

    symbol       go to state 78
    refieldlist  go to state 79
    refield      go to state 80


state 49

   34 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 16
    lvalue  go to state 14
    symbol  go to state 15
    expseq  go to state 81


state 50

    4 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 4 (exp)


state 51

   24 exp: IF exp THEN . exp ELSE exp
   25    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14
    symbol  go to state 15


state 52

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14
    symbol  go to state 15


state 53

   27 exp: FOR symbol ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14
    symbol  go to state 15


state 54

   61 fundec: FUNCTION symbol . LPAREN tyfieldlist RPAREN EQ exp
   62       | FUNCTION symbol . LPAREN tyfieldlist RPAREN COLON symbol EQ exp

    LPAREN  shift, and go to state 85


state 55

   48 dec: VAR symbol . ASSIGN exp
   49    | VAR symbol . COLON symbol ASSIGN exp

    COLON   shift, and go to state 86
    ASSIGN  shift, and go to state 87


state 56

   52 tydec: TYPE symbol . EQ ty

    EQ  shift, and go to state 88


state 57

   29 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 16
    lvalue  go to state 14
    symbol  go to state 15
    expseq  go to state 89


state 58

   44 decs: dec decs .

    $default  reduce using rule 44 (decs)


state 59

   50 tydecs: tydec tydecs .

    $default  reduce using rule 50 (tydecs)


state 60

   59 fundecs: fundec fundecs .

    $default  reduce using rule 59 (fundecs)


state 61

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 9 (exp)


state 62

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 10 (exp)


state 63

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 11 (exp)


state 64

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 65

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


state 66

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 67

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 68

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   18    | exp LE exp .
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 69

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   15    | exp GT exp .
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 70

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   17    | exp GE exp .
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 71

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41

    $default  reduce using rule 19 (exp)


state 72

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42

    $default  reduce using rule 20 (exp)


state 73

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   22    | lvalue LBRACK exp . RBRACK OF exp
   32 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 90
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43


state 74

   31 lvalue: lvalue DOT symbol .

    $default  reduce using rule 31 (lvalue)


state 75

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   23    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 23 (exp)


state 76

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   37 args: exp . COMMA args
   38     | exp .

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 38 (args)


state 77

    8 exp: symbol LPAREN args . RPAREN

    RPAREN  shift, and go to state 92


state 78

   42 refield: symbol . EQ exp

    EQ  shift, and go to state 93


state 79

   21 exp: symbol LBRACE refieldlist . RBRACE

    RBRACE  shift, and go to state 94


state 80

   40 refieldlist: refield . COMMA refieldlist
   41            | refield .

    COMMA  shift, and go to state 95

    $default  reduce using rule 41 (refieldlist)


state 81

   34 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 34 (expseq)


state 82

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp THEN exp . ELSE exp
   25    | IF exp THEN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    ELSE    shift, and go to state 96

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    ELSE      [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


state 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | WHILE exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


state 84

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR symbol ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    TO      shift, and go to state 97


state 85

   61 fundec: FUNCTION symbol LPAREN . tyfieldlist RPAREN EQ exp
   62       | FUNCTION symbol LPAREN . tyfieldlist RPAREN COLON symbol EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 58 (tyfieldlist)

    symbol       go to state 98
    tyfieldlist  go to state 99


state 86

   49 dec: VAR symbol COLON . symbol ASSIGN exp

    ID  shift, and go to state 1

    symbol  go to state 100


state 87

   48 dec: VAR symbol ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 101
    lvalue  go to state 14
    symbol  go to state 15


state 88

   52 tydec: TYPE symbol EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 102
    ARRAY   shift, and go to state 103

    symbol  go to state 104
    ty      go to state 105


state 89

   29 exp: LET decs IN expseq . END

    END  shift, and go to state 106


state 90

   22 exp: lvalue LBRACK exp RBRACK . OF exp
   32 lvalue: lvalue LBRACK exp RBRACK .

    OF  shift, and go to state 107

    $default  reduce using rule 32 (lvalue)


state 91

   37 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (args)

    exp     go to state 76
    lvalue  go to state 14
    symbol  go to state 15
    args    go to state 108


state 92

    8 exp: symbol LPAREN args RPAREN .

    $default  reduce using rule 8 (exp)


state 93

   42 refield: symbol EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 109
    lvalue  go to state 14
    symbol  go to state 15


state 94

   21 exp: symbol LBRACE refieldlist RBRACE .

    $default  reduce using rule 21 (exp)


state 95

   40 refieldlist: refield COMMA . refieldlist

    ID  shift, and go to state 1

    $default  reduce using rule 43 (refield)

    symbol       go to state 78
    refieldlist  go to state 110
    refield      go to state 80


state 96

   24 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 111
    lvalue  go to state 14
    symbol  go to state 15


state 97

   27 exp: FOR symbol ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 112
    lvalue  go to state 14
    symbol  go to state 15


state 98

   56 tyfieldlist: symbol . COLON symbol COMMA tyfieldlist
   57            | symbol . COLON symbol

    COLON  shift, and go to state 113


state 99

   61 fundec: FUNCTION symbol LPAREN tyfieldlist . RPAREN EQ exp
   62       | FUNCTION symbol LPAREN tyfieldlist . RPAREN COLON symbol EQ exp

    RPAREN  shift, and go to state 114


state 100

   49 dec: VAR symbol COLON symbol . ASSIGN exp

    ASSIGN  shift, and go to state 115


state 101

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   48 dec: VAR symbol ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 48 (dec)


state 102

   54 ty: LBRACE . tyfieldlist RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 58 (tyfieldlist)

    symbol       go to state 98
    tyfieldlist  go to state 116


state 103

   55 ty: ARRAY . OF symbol

    OF  shift, and go to state 117


state 104

   53 ty: symbol .

    $default  reduce using rule 53 (ty)


state 105

   52 tydec: TYPE symbol EQ ty .

    $default  reduce using rule 52 (tydec)


state 106

   29 exp: LET decs IN expseq END .

    $default  reduce using rule 29 (exp)


state 107

   22 exp: lvalue LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 118
    lvalue  go to state 14
    symbol  go to state 15


state 108

   37 args: exp COMMA args .

    $default  reduce using rule 37 (args)


state 109

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   42 refield: symbol EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 42 (refield)


state 110

   40 refieldlist: refield COMMA refieldlist .

    $default  reduce using rule 40 (refieldlist)


state 111

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


state 112

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR symbol ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 119


state 113

   56 tyfieldlist: symbol COLON . symbol COMMA tyfieldlist
   57            | symbol COLON . symbol

    ID  shift, and go to state 1

    symbol  go to state 120


state 114

   61 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN . EQ exp
   62       | FUNCTION symbol LPAREN tyfieldlist RPAREN . COLON symbol EQ exp

    COLON  shift, and go to state 121
    EQ     shift, and go to state 122


state 115

   49 dec: VAR symbol COLON symbol ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 123
    lvalue  go to state 14
    symbol  go to state 15


state 116

   54 ty: LBRACE tyfieldlist . RBRACE

    RBRACE  shift, and go to state 124


state 117

   55 ty: ARRAY OF . symbol

    ID  shift, and go to state 1

    symbol  go to state 125


state 118

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   22    | lvalue LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


state 119

   27 exp: FOR symbol ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 126
    lvalue  go to state 14
    symbol  go to state 15


state 120

   56 tyfieldlist: symbol COLON symbol . COMMA tyfieldlist
   57            | symbol COLON symbol .

    COMMA  shift, and go to state 127

    $default  reduce using rule 57 (tyfieldlist)


state 121

   62 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN COLON . symbol EQ exp

    ID  shift, and go to state 1

    symbol  go to state 128


state 122

   61 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 129
    lvalue  go to state 14
    symbol  go to state 15


state 123

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   49 dec: VAR symbol COLON symbol ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 49 (dec)


state 124

   54 ty: LBRACE tyfieldlist RBRACE .

    $default  reduce using rule 54 (ty)


state 125

   55 ty: ARRAY OF symbol .

    $default  reduce using rule 55 (ty)


state 126

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR symbol ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 127

   56 tyfieldlist: symbol COLON symbol COMMA . tyfieldlist

    ID  shift, and go to state 1

    $default  reduce using rule 58 (tyfieldlist)

    symbol       go to state 98
    tyfieldlist  go to state 130


state 128

   62 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN COLON symbol . EQ exp

    EQ  shift, and go to state 131


state 129

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   61 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 61 (fundec)


state 130

   56 tyfieldlist: symbol COLON symbol COMMA tyfieldlist .

    $default  reduce using rule 56 (tyfieldlist)


state 131

   62 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN COLON symbol EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 132
    lvalue  go to state 14
    symbol  go to state 15


state 132

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . GT exp
   16    | exp . LT exp
   17    | exp . GE exp
   18    | exp . LE exp
   19    | exp . AND exp
   20    | exp . OR exp
   62 fundec: FUNCTION symbol LPAREN tyfieldlist RPAREN COLON symbol EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 62 (fundec)
