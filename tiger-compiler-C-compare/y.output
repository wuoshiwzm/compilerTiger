Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | STRING
    4    | lvalue
    5    | LPAREN expseq RPAREN
    6    | MINUS exp
    7    | NIL
    8    | IF exp THEN exp
    9    | IF exp THEN exp ELSE exp
   10    | WHILE exp DO exp
   11    | FOR id ASSIGN exp TO exp DO exp
   12    | BREAK
   13    | LET decs IN expseq END
   14    | id LPAREN args RPAREN
   15    | id LBRACE recfield RBRACE
   16    | id LBRACK exp RBRACK OF exp
   17    | exp TIMES exp
   18    | exp DIVIDE exp
   19    | exp PLUS exp
   20    | exp MINUS exp
   21    | exp EQ exp
   22    | exp NEQ exp
   23    | exp LT exp
   24    | exp LE exp
   25    | exp GT exp
   26    | exp GE exp
   27    | exp AND exp
   28    | exp OR exp
   29    | lvalue ASSIGN exp

   30 id: ID

   31 lvalue: id lvalue_ext

   32 lvalue_ext: /* empty */
   33           | DOT id lvalue_ext
   34           | LBRACK exp RBRACK lvalue_ext

   35 args: /* empty */
   36     | args1

   37 args1: exp
   38      | exp COMMA args1

   39 expseq: /* empty */
   40       | expseq1

   41 expseq1: exp
   42        | exp SEMICOLON expseq1

   43 decs: /* empty */
   44     | typedec decs
   45     | vardec decs
   46     | funcdec decs

   47 vardec: VAR id ASSIGN exp
   48       | VAR id COLON id ASSIGN exp

   49 typedec: TYPE id EQ ty

   50 funcdec: FUNCTION id LPAREN tyfields RPAREN EQ exp
   51        | FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp

   52 ty: id
   53   | LBRACE tyfields RBRACE
   54   | ARRAY OF id

   55 tyfields: /* empty */
   56         | tyfields1

   57 tyfields1: id COLON id
   58          | id COLON id COMMA tyfields1

   59 recfield: /* empty */
   60         | recfield1

   61 recfield1: id EQ exp
   62          | id EQ exp COMMA recfield1


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 30
INT (259) 2
STRING (260) 3
COMMA (261) 38 58 62
COLON (262) 48 51 57 58
SEMICOLON (263) 42
LPAREN (264) 5 14 50 51
RPAREN (265) 5 14 50 51
LBRACK (266) 16 34
RBRACK (267) 16 34
LBRACE (268) 15 53
RBRACE (269) 15 53
DOT (270) 33
PLUS (271) 19
MINUS (272) 6 20
TIMES (273) 17
DIVIDE (274) 18
EQ (275) 21 49 50 51 61 62
NEQ (276) 22
LT (277) 23
LE (278) 24
GT (279) 25
GE (280) 26
AND (281) 27
OR (282) 28
ASSIGN (283) 11 29 47 48
ARRAY (284) 54
IF (285) 8 9
THEN (286) 8 9
ELSE (287) 9
WHILE (288) 10
FOR (289) 11
TO (290) 11
DO (291) 10 11
LET (292) 13
IN (293) 13
END (294) 13
OF (295) 16 54
BREAK (296) 12
NIL (297) 7
FUNCTION (298) 50 51
VAR (299) 47 48
TYPE (300) 49


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 6 8 9 10 11 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 34 37 38 41 42 47 48 50 51 61 62
id (49)
    on left: 30, on right: 11 14 15 16 31 33 47 48 49 50 51 52 54 57
    58 61 62
lvalue (50)
    on left: 31, on right: 4 29
lvalue_ext (51)
    on left: 32 33 34, on right: 31 33 34
args (52)
    on left: 35 36, on right: 14
args1 (53)
    on left: 37 38, on right: 36 38
expseq (54)
    on left: 39 40, on right: 5 13
expseq1 (55)
    on left: 41 42, on right: 40 42
decs (56)
    on left: 43 44 45 46, on right: 13 44 45 46
vardec (57)
    on left: 47 48, on right: 45
typedec (58)
    on left: 49, on right: 44
funcdec (59)
    on left: 50 51, on right: 46
ty (60)
    on left: 52 53 54, on right: 49
tyfields (61)
    on left: 55 56, on right: 50 51 53
tyfields1 (62)
    on left: 57 58, on right: 56 58
recfield (63)
    on left: 59 60, on right: 15
recfield1 (64)
    on left: 61 62, on right: 60 62


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    id       go to state 14
    lvalue   go to state 15


state 1

   30 id: ID .

    $default  reduce using rule 30 (id)


state 2

    2 exp: INT .

    $default  reduce using rule 2 (exp)


state 3

    3 exp: STRING .

    $default  reduce using rule 3 (exp)


state 4

    5 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (expseq)

    exp      go to state 16
    id       go to state 14
    lvalue   go to state 15
    expseq   go to state 17
    expseq1  go to state 18


state 5

    6 exp: MINUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 19
    id      go to state 14
    lvalue  go to state 15


state 6

    8 exp: IF . exp THEN exp
    9    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    id      go to state 14
    lvalue  go to state 15


state 7

   10 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    id      go to state 14
    lvalue  go to state 15


state 8

   11 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 22


state 9

   13 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 43 (decs)

    decs     go to state 26
    vardec   go to state 27
    typedec  go to state 28
    funcdec  go to state 29


state 10

   12 exp: BREAK .

    $default  reduce using rule 12 (exp)


state 11

    7 exp: NIL .

    $default  reduce using rule 7 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 30


state 13

    1 program: exp .
   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 1 (program)


state 14

   14 exp: id . LPAREN args RPAREN
   15    | id . LBRACE recfield RBRACE
   16    | id . LBRACK exp RBRACK OF exp
   31 lvalue: id . lvalue_ext

    LPAREN  shift, and go to state 43
    LBRACK  shift, and go to state 44
    LBRACE  shift, and go to state 45
    DOT     shift, and go to state 46

    $default  reduce using rule 32 (lvalue_ext)

    lvalue_ext  go to state 47


state 15

    4 exp: lvalue .
   29    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 48

    $default  reduce using rule 4 (exp)


state 16

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   41 expseq1: exp .
   42        | exp . SEMICOLON expseq1

    SEMICOLON  shift, and go to state 49
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDE     shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    LT         shift, and go to state 37
    LE         shift, and go to state 38
    GT         shift, and go to state 39
    GE         shift, and go to state 40
    AND        shift, and go to state 41
    OR         shift, and go to state 42

    $default  reduce using rule 41 (expseq1)


state 17

    5 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 50


state 18

   40 expseq: expseq1 .

    $default  reduce using rule 40 (expseq)


state 19

    6 exp: MINUS exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    $default  reduce using rule 6 (exp)


state 20

    8 exp: IF exp . THEN exp
    9    | IF exp . THEN exp ELSE exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    THEN    shift, and go to state 51


state 21

   10 exp: WHILE exp . DO exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    DO      shift, and go to state 52


state 22

   11 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 53


state 23

   50 funcdec: FUNCTION . id LPAREN tyfields RPAREN EQ exp
   51        | FUNCTION . id LPAREN tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 54


state 24

   47 vardec: VAR . id ASSIGN exp
   48       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 55


state 25

   49 typedec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 56


state 26

   13 exp: LET decs . IN expseq END

    IN  shift, and go to state 57


state 27

   45 decs: vardec . decs

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 43 (decs)

    decs     go to state 58
    vardec   go to state 27
    typedec  go to state 28
    funcdec  go to state 29


state 28

   44 decs: typedec . decs

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 43 (decs)

    decs     go to state 59
    vardec   go to state 27
    typedec  go to state 28
    funcdec  go to state 29


state 29

   46 decs: funcdec . decs

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 43 (decs)

    decs     go to state 60
    vardec   go to state 27
    typedec  go to state 28
    funcdec  go to state 29


state 30

    0 $accept: program $end .

    $default  accept


state 31

   19 exp: exp PLUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 61
    id      go to state 14
    lvalue  go to state 15


state 32

   20 exp: exp MINUS . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 62
    id      go to state 14
    lvalue  go to state 15


state 33

   17 exp: exp TIMES . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    id      go to state 14
    lvalue  go to state 15


state 34

   18 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    id      go to state 14
    lvalue  go to state 15


state 35

   21 exp: exp EQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    id      go to state 14
    lvalue  go to state 15


state 36

   22 exp: exp NEQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    id      go to state 14
    lvalue  go to state 15


state 37

   23 exp: exp LT . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    id      go to state 14
    lvalue  go to state 15


state 38

   24 exp: exp LE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    id      go to state 14
    lvalue  go to state 15


state 39

   25 exp: exp GT . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    id      go to state 14
    lvalue  go to state 15


state 40

   26 exp: exp GE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    id      go to state 14
    lvalue  go to state 15


state 41

   27 exp: exp AND . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    id      go to state 14
    lvalue  go to state 15


state 42

   28 exp: exp OR . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    id      go to state 14
    lvalue  go to state 15


state 43

   14 exp: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 35 (args)

    exp     go to state 73
    id      go to state 14
    lvalue  go to state 15
    args    go to state 74
    args1   go to state 75


state 44

   16 exp: id LBRACK . exp RBRACK OF exp
   34 lvalue_ext: LBRACK . exp RBRACK lvalue_ext

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    id      go to state 14
    lvalue  go to state 15


state 45

   15 exp: id LBRACE . recfield RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 59 (recfield)

    id         go to state 77
    recfield   go to state 78
    recfield1  go to state 79


state 46

   33 lvalue_ext: DOT . id lvalue_ext

    ID  shift, and go to state 1

    id  go to state 80


state 47

   31 lvalue: id lvalue_ext .

    $default  reduce using rule 31 (lvalue)


state 48

   29 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    id      go to state 14
    lvalue  go to state 15


state 49

   42 expseq1: exp SEMICOLON . expseq1

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 16
    id       go to state 14
    lvalue   go to state 15
    expseq1  go to state 82


state 50

    5 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 5 (exp)


state 51

    8 exp: IF exp THEN . exp
    9    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    id      go to state 14
    lvalue  go to state 15


state 52

   10 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    id      go to state 14
    lvalue  go to state 15


state 53

   11 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    id      go to state 14
    lvalue  go to state 15


state 54

   50 funcdec: FUNCTION id . LPAREN tyfields RPAREN EQ exp
   51        | FUNCTION id . LPAREN tyfields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 86


state 55

   47 vardec: VAR id . ASSIGN exp
   48       | VAR id . COLON id ASSIGN exp

    COLON   shift, and go to state 87
    ASSIGN  shift, and go to state 88


state 56

   49 typedec: TYPE id . EQ ty

    EQ  shift, and go to state 89


state 57

   13 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (expseq)

    exp      go to state 16
    id       go to state 14
    lvalue   go to state 15
    expseq   go to state 90
    expseq1  go to state 18


state 58

   45 decs: vardec decs .

    $default  reduce using rule 45 (decs)


state 59

   44 decs: typedec decs .

    $default  reduce using rule 44 (decs)


state 60

   46 decs: funcdec decs .

    $default  reduce using rule 46 (decs)


state 61

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   19    | exp PLUS exp .
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    $default  reduce using rule 19 (exp)


state 62

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   20    | exp MINUS exp .
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    $default  reduce using rule 20 (exp)


state 63

   17 exp: exp . TIMES exp
   17    | exp TIMES exp .
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    $default  reduce using rule 17 (exp)


state 64

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   18    | exp DIVIDE exp .
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    $default  reduce using rule 18 (exp)


state 65

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   21    | exp EQ exp .
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


state 66

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   22    | exp NEQ exp .
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 67

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   23    | exp LT exp .
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 68

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   24    | exp LE exp .
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


state 69

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   25    | exp GT exp .
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


state 70

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   26    | exp GE exp .
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (exp)


state 71

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   27    | exp AND exp .
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40

    $default  reduce using rule 27 (exp)


state 72

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   28    | exp OR exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40

    $default  reduce using rule 28 (exp)


state 73

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   37 args1: exp .
   38      | exp . COMMA args1

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 37 (args1)


state 74

   14 exp: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 92


state 75

   36 args: args1 .

    $default  reduce using rule 36 (args)


state 76

   16 exp: id LBRACK exp . RBRACK OF exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   34 lvalue_ext: LBRACK exp . RBRACK lvalue_ext

    RBRACK  shift, and go to state 93
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42


state 77

   61 recfield1: id . EQ exp
   62          | id . EQ exp COMMA recfield1

    EQ  shift, and go to state 94


state 78

   15 exp: id LBRACE recfield . RBRACE

    RBRACE  shift, and go to state 95


state 79

   60 recfield: recfield1 .

    $default  reduce using rule 60 (recfield)


state 80

   33 lvalue_ext: DOT id . lvalue_ext

    LBRACK  shift, and go to state 96
    DOT     shift, and go to state 46

    $default  reduce using rule 32 (lvalue_ext)

    lvalue_ext  go to state 97


state 81

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 29 (exp)


state 82

   42 expseq1: exp SEMICOLON expseq1 .

    $default  reduce using rule 42 (expseq1)


state 83

    8 exp: IF exp THEN exp .
    9    | IF exp THEN exp . ELSE exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    ELSE    shift, and go to state 98

    $default  reduce using rule 8 (exp)


state 84

   10 exp: WHILE exp DO exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 10 (exp)


state 85

   11 exp: FOR id ASSIGN exp . TO exp DO exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    TO      shift, and go to state 99


state 86

   50 funcdec: FUNCTION id LPAREN . tyfields RPAREN EQ exp
   51        | FUNCTION id LPAREN . tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 55 (tyfields)

    id         go to state 100
    tyfields   go to state 101
    tyfields1  go to state 102


state 87

   48 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 103


state 88

   47 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 104
    id      go to state 14
    lvalue  go to state 15


state 89

   49 typedec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 105
    ARRAY   shift, and go to state 106

    id  go to state 107
    ty  go to state 108


state 90

   13 exp: LET decs IN expseq . END

    END  shift, and go to state 109


state 91

   38 args1: exp COMMA . args1

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    id      go to state 14
    lvalue  go to state 15
    args1   go to state 110


state 92

   14 exp: id LPAREN args RPAREN .

    $default  reduce using rule 14 (exp)


state 93

   16 exp: id LBRACK exp RBRACK . OF exp
   34 lvalue_ext: LBRACK exp RBRACK . lvalue_ext

    LBRACK  shift, and go to state 96
    DOT     shift, and go to state 46
    OF      shift, and go to state 111

    $default  reduce using rule 32 (lvalue_ext)

    lvalue_ext  go to state 112


state 94

   61 recfield1: id EQ . exp
   62          | id EQ . exp COMMA recfield1

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 113
    id      go to state 14
    lvalue  go to state 15


state 95

   15 exp: id LBRACE recfield RBRACE .

    $default  reduce using rule 15 (exp)


state 96

   34 lvalue_ext: LBRACK . exp RBRACK lvalue_ext

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 114
    id      go to state 14
    lvalue  go to state 15


state 97

   33 lvalue_ext: DOT id lvalue_ext .

    $default  reduce using rule 33 (lvalue_ext)


state 98

    9 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 115
    id      go to state 14
    lvalue  go to state 15


state 99

   11 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 116
    id      go to state 14
    lvalue  go to state 15


state 100

   57 tyfields1: id . COLON id
   58          | id . COLON id COMMA tyfields1

    COLON  shift, and go to state 117


state 101

   50 funcdec: FUNCTION id LPAREN tyfields . RPAREN EQ exp
   51        | FUNCTION id LPAREN tyfields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 118


state 102

   56 tyfields: tyfields1 .

    $default  reduce using rule 56 (tyfields)


state 103

   48 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 119


state 104

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   47 vardec: VAR id ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 47 (vardec)


state 105

   53 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 55 (tyfields)

    id         go to state 100
    tyfields   go to state 120
    tyfields1  go to state 102


state 106

   54 ty: ARRAY . OF id

    OF  shift, and go to state 121


state 107

   52 ty: id .

    $default  reduce using rule 52 (ty)


state 108

   49 typedec: TYPE id EQ ty .

    $default  reduce using rule 49 (typedec)


state 109

   13 exp: LET decs IN expseq END .

    $default  reduce using rule 13 (exp)


state 110

   38 args1: exp COMMA args1 .

    $default  reduce using rule 38 (args1)


state 111

   16 exp: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 122
    id      go to state 14
    lvalue  go to state 15


state 112

   34 lvalue_ext: LBRACK exp RBRACK lvalue_ext .

    $default  reduce using rule 34 (lvalue_ext)


state 113

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   61 recfield1: id EQ exp .
   62          | id EQ exp . COMMA recfield1

    COMMA   shift, and go to state 123
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 61 (recfield1)


state 114

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   34 lvalue_ext: LBRACK exp . RBRACK lvalue_ext

    RBRACK  shift, and go to state 124
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42


state 115

    9 exp: IF exp THEN exp ELSE exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 9 (exp)


state 116

   11 exp: FOR id ASSIGN exp TO exp . DO exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    DO      shift, and go to state 125


state 117

   57 tyfields1: id COLON . id
   58          | id COLON . id COMMA tyfields1

    ID  shift, and go to state 1

    id  go to state 126


state 118

   50 funcdec: FUNCTION id LPAREN tyfields RPAREN . EQ exp
   51        | FUNCTION id LPAREN tyfields RPAREN . COLON id EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


state 119

   48 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 129
    id      go to state 14
    lvalue  go to state 15


state 120

   53 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 130


state 121

   54 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 131


state 122

   16 exp: id LBRACK exp RBRACK OF exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 16 (exp)


state 123

   62 recfield1: id EQ exp COMMA . recfield1

    ID  shift, and go to state 1

    id         go to state 77
    recfield1  go to state 132


state 124

   34 lvalue_ext: LBRACK exp RBRACK . lvalue_ext

    LBRACK  shift, and go to state 96
    DOT     shift, and go to state 46

    $default  reduce using rule 32 (lvalue_ext)

    lvalue_ext  go to state 112


state 125

   11 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 133
    id      go to state 14
    lvalue  go to state 15


state 126

   57 tyfields1: id COLON id .
   58          | id COLON id . COMMA tyfields1

    COMMA  shift, and go to state 134

    $default  reduce using rule 57 (tyfields1)


state 127

   51 funcdec: FUNCTION id LPAREN tyfields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 135


state 128

   50 funcdec: FUNCTION id LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 136
    id      go to state 14
    lvalue  go to state 15


state 129

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   48 vardec: VAR id COLON id ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 48 (vardec)


state 130

   53 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 53 (ty)


state 131

   54 ty: ARRAY OF id .

    $default  reduce using rule 54 (ty)


state 132

   62 recfield1: id EQ exp COMMA recfield1 .

    $default  reduce using rule 62 (recfield1)


state 133

   11 exp: FOR id ASSIGN exp TO exp DO exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 11 (exp)


state 134

   58 tyfields1: id COLON id COMMA . tyfields1

    ID  shift, and go to state 1

    id         go to state 100
    tyfields1  go to state 137


state 135

   51 funcdec: FUNCTION id LPAREN tyfields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 138


state 136

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   50 funcdec: FUNCTION id LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 50 (funcdec)


state 137

   58 tyfields1: id COLON id COMMA tyfields1 .

    $default  reduce using rule 58 (tyfields1)


state 138

   51 funcdec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    STRING  shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    id      go to state 14
    lvalue  go to state 15


state 139

   17 exp: exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . PLUS exp
   20    | exp . MINUS exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . LE exp
   25    | exp . GT exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   51 funcdec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 51 (funcdec)
